// <auto-generated />
using Geneezy.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Geneezy.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230726205631_Migration-GENEEZY-4.2")]
    partial class MigrationGENEEZY42
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("Geneezy.Domain.Entity.Model.Category", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER")
                        .HasColumnName("IsActive");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<uint>("ParentCategoryId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ParentCategoryId");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Geneezy.Domain.Entity.Model.Client", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<uint>("CEP")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CEP");

                    b.Property<ulong>("CPF")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CPF");

                    b.Property<string>("City")
                        .HasColumnType("TEXT")
                        .HasColumnName("City");

                    b.Property<string>("ComplementAddress")
                        .HasColumnType("TEXT")
                        .HasColumnName("ComplementAddress");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT")
                        .HasColumnName("Country");

                    b.Property<uint>("CustomerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CustomerId");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateOfBirth");

                    b.Property<string>("DateOfRegister")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateOfRegister");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT")
                        .HasColumnName("LastName");

                    b.Property<string>("Mail")
                        .HasColumnType("TEXT")
                        .HasColumnName("Mail");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("TEXT")
                        .HasColumnName("Neighborhood");

                    b.Property<string>("Observation")
                        .HasColumnType("TEXT")
                        .HasColumnName("Observation");

                    b.Property<string>("PositionInTheCompany")
                        .HasColumnType("TEXT")
                        .HasColumnName("PositionInTheCompany");

                    b.Property<uint>("ResidentialNumber")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ResidentialNumber");

                    b.Property<char>("Sex")
                        .HasColumnType("TEXT")
                        .HasColumnName("Sex");

                    b.Property<string>("State")
                        .HasColumnType("TEXT")
                        .HasColumnName("State");

                    b.Property<string>("Street")
                        .HasColumnType("TEXT")
                        .HasColumnName("Street");

                    b.Property<ulong>("Telephone")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Telephone");

                    b.Property<bool>("isActive")
                        .HasColumnType("INTEGER")
                        .HasColumnName("isActive");

                    b.Property<bool>("isBusiness")
                        .HasColumnType("INTEGER")
                        .HasColumnName("isBusiness");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Geneezy.Domain.Entity.Model.Customer", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<string>("BusinessSegment")
                        .HasColumnType("TEXT")
                        .HasColumnName("BusinessSegment");

                    b.Property<uint>("CEP")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CEP");

                    b.Property<ulong>("CNPJ")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CNPJ");

                    b.Property<string>("City")
                        .HasColumnType("TEXT")
                        .HasColumnName("City");

                    b.Property<string>("CompanyName")
                        .HasColumnType("TEXT")
                        .HasColumnName("CompanyName");

                    b.Property<string>("ComplementAddress")
                        .HasColumnType("TEXT")
                        .HasColumnName("ComplementAddress");

                    b.Property<string>("CorporateSocialName")
                        .HasColumnType("TEXT")
                        .HasColumnName("CorporateSocialName");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT")
                        .HasColumnName("Country");

                    b.Property<string>("DateOfFoundation")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateOfFoundation");

                    b.Property<string>("DateOfRegister")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateOfRegister");

                    b.Property<string>("Mail")
                        .HasColumnType("TEXT")
                        .HasColumnName("Mail");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("TEXT")
                        .HasColumnName("Neighborhood");

                    b.Property<string>("Observation")
                        .HasColumnType("TEXT")
                        .HasColumnName("Observation");

                    b.Property<uint>("ResidentialNumber")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ResidentialNumber");

                    b.Property<string>("State")
                        .HasColumnType("TEXT")
                        .HasColumnName("State");

                    b.Property<string>("Street")
                        .HasColumnType("TEXT")
                        .HasColumnName("Street");

                    b.Property<ulong>("Telephone")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Telephone");

                    b.Property<bool>("isActive")
                        .HasColumnType("INTEGER")
                        .HasColumnName("isActive");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Geneezy.Domain.Entity.Model.Person", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<ulong>("CPF")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CPF");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateOfBirth");

                    b.Property<string>("DateOfRegister")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateOfRegister");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT")
                        .HasColumnName("LastName");

                    b.Property<string>("Mail")
                        .HasColumnType("TEXT")
                        .HasColumnName("Mail");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<string>("Observation")
                        .HasColumnType("TEXT")
                        .HasColumnName("Observation");

                    b.Property<char>("Sex")
                        .HasColumnType("TEXT")
                        .HasColumnName("Sex");

                    b.Property<uint>("SupplierId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("SupplierId");

                    b.Property<ulong>("Telephone")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Telephone");

                    b.Property<bool>("isActive")
                        .HasColumnType("INTEGER")
                        .HasColumnName("isActive");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Geneezy.Domain.Entity.Model.Product", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<string>("Brand")
                        .HasColumnType("TEXT")
                        .HasColumnName("Brand");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT")
                        .HasColumnName("Category");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("Description");

                    b.Property<string>("Ean")
                        .HasColumnType("TEXT")
                        .HasColumnName("Ean");

                    b.Property<decimal>("Height")
                        .HasColumnType("TEXT")
                        .HasColumnName("Height");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER")
                        .HasColumnName("IsActive");

                    b.Property<decimal>("Length")
                        .HasColumnType("TEXT")
                        .HasColumnName("Length");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("Name");

                    b.Property<string>("Sku")
                        .HasColumnType("TEXT")
                        .HasColumnName("Sku");

                    b.Property<string>("Supplier")
                        .HasColumnType("TEXT")
                        .HasColumnName("Supplier");

                    b.Property<decimal>("Weight")
                        .HasColumnType("TEXT")
                        .HasColumnName("Weight");

                    b.Property<decimal>("Width")
                        .HasColumnType("TEXT")
                        .HasColumnName("Width");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Geneezy.Domain.Entity.Model.Supplier", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("Id");

                    b.Property<string>("BusinessSegment")
                        .HasColumnType("TEXT")
                        .HasColumnName("BusinessSegment");

                    b.Property<uint>("CEP")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CEP");

                    b.Property<ulong>("CNPJ")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CNPJ");

                    b.Property<string>("City")
                        .HasColumnType("TEXT")
                        .HasColumnName("City");

                    b.Property<string>("CompanyName")
                        .HasColumnType("TEXT")
                        .HasColumnName("CompanyName");

                    b.Property<string>("ComplementAddress")
                        .HasColumnType("TEXT")
                        .HasColumnName("ComplementAddress");

                    b.Property<string>("CorporateSocialName")
                        .HasColumnType("TEXT")
                        .HasColumnName("CorporateSocialName");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT")
                        .HasColumnName("Country");

                    b.Property<string>("DateOfFoundation")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateOfFoundation");

                    b.Property<string>("DateOfRegister")
                        .HasColumnType("TEXT")
                        .HasColumnName("DateOfRegister");

                    b.Property<string>("Mail")
                        .HasColumnType("TEXT")
                        .HasColumnName("Mail");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("TEXT")
                        .HasColumnName("Neighborhood");

                    b.Property<string>("Observation")
                        .HasColumnType("TEXT")
                        .HasColumnName("Observation");

                    b.Property<uint>("ResidentialNumber")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ResidentialNumber");

                    b.Property<string>("State")
                        .HasColumnType("TEXT")
                        .HasColumnName("State");

                    b.Property<string>("Street")
                        .HasColumnType("TEXT")
                        .HasColumnName("Street");

                    b.Property<ulong>("Telephone")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Telephone");

                    b.Property<bool>("isActive")
                        .HasColumnType("INTEGER")
                        .HasColumnName("isActive");

                    b.HasKey("Id");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("Geneezy.Domain.Entity.Model.Client", b =>
                {
                    b.HasOne("Geneezy.Domain.Entity.Model.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Geneezy.Domain.Entity.Model.Person", b =>
                {
                    b.HasOne("Geneezy.Domain.Entity.Model.Supplier", null)
                        .WithMany("Person")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Geneezy.Domain.Entity.Model.Supplier", b =>
                {
                    b.Navigation("Person");
                });
#pragma warning restore 612, 618
        }
    }
}
